###
# Copyright (2021) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: all
  vars:
    config: "{{ playbook_dir }}/oneview_config.json"
    poolType: 'vmac'
  tasks:
    - name: Get schema of the id pools
      oneview_id_pools:
        config: "{{ config }}"
        state: schema
        data:
          description: 'ID pool schema'
      delegate_to: localhost

    - name: Generates a random range
      oneview_id_pools:
        config: "{{ config }}"
        state: generate
        data:
          poolType: '{{ poolType }}'
      delegate_to: localhost

    - name: Get the ID Pools type
      oneview_id_pools:
        config: "{{ config }}"
        state: get_pool_type
        data:
          poolType: '{{ poolType }}'
      delegate_to: localhost
    - debug: var=id_pool

    - name: Enables or disables the pool type
      oneview_id_pools:
        config: "{{ config }}"
        state: update_pool_type
        data:
          poolType: '{{ poolType }}'
          rangeUris: '{{ id_pool["rangeUris"] }}'
          enabled: True
      delegate_to: localhost

    - name: Allocates one or more IDs from a pool
      oneview_id_pools:
        config: "{{ config }}"
        state: allocate
        data:
          poolType: '{{ poolType }}'
          count: 2
      delegate_to: localhost

    - name: Checks the range availability in the ID pool
      oneview_id_pools:
        config: "{{ config }}"
        state: check_range_availability
        data:
          poolType: '{{ poolType }}'
          idList: '{{ id_pool["idList"] }}'
      delegate_to: localhost

    - name: Validates the list of ID's from IPv4 Subnet
      oneview_id_pools:
        config: "{{ config }}"
        state: validate_id_pool
        data:
          poolType: 'ipv4'
          idList: ['172.18.9.11']
      delegate_to: localhost

    - name: Validates a set of IDs to reserve in the pool
      oneview_id_pools:
        config: "{{ config }}"
        state: validate
        data:
          poolType: '{{ poolType }}'
          idList: '{{ id_pool["idList"] }}'
      delegate_to: localhost

    - name: Collects one or more IDs to be returned to a pool
      oneview_id_pools:
        config: "{{ config }}"
        state: collect
        data:
          poolType: '{{ poolType }}'
          rangeUris: '{{ id_pool["idList"] }}'
      delegate_to: localhost
